#!<SHELL>
#
#
# SH script to send batches to FIDOGATE
#

# Output to "log-news" log file
FIDOGATE_LOGFILE="%G/log-news"
export FIDOGATE_LOGFILE

RFC2FTN=<SEND_RFC2FTN>
PROGNAME=`basename $0`
LOCK=`<LIBEXECDIR>/confval -p LOCKDIR`/LOCK.${PROGNAME}
LOG=`<LIBEXECDIR>/confval -p LOGDIR`/${PROGNAME}.log
BATCH=`<LIBEXECDIR>/confval -p INN_BATCHDIR`
SPOOL=`<LIBEXECDIR>/confval -p NEWSSPOOLDIR`
PATHBIN=`<LIBEXECDIR>/confval -p NEWSBINDIR`

MAXJOBS=200

##  Start logging.
test ! -f ${LOG} && touch ${LOG}
chmod 0660 ${LOG}
exec >>${LOG} 2>&1
echo "${PROGNAME}: [$$] begin `date`"
cd ${BATCH}

##  Anyone else there?
trap 'rm -f ${LOCK} ; exit 1' 1 2 3 15
if test -e ${LOCK}; then
     pid=`cat ${LOCK}`
     echo "lock found ${pid}"
     if kill -0 ${pid} 2> /dev/null; then
	echo "${PROGNAME}: [$$] locked by [`cat ${LOCK}`]"
	exit 0
     fi
fi


##  Who are we sending to?
if [ -n "$1" ] ; then
    LIST="$*"
else
    LIST="fidogate"
fi


##  Do the work...
${PATHBIN}/qnews
if [ -s ${BATCH}/${LIST}/outgoing ] ; then
 mv ${BATCH}/${LIST}/outgoing ${BATCH}/${LIST}/outgoing.work
 for SITE in ${SPOOL}/`cat ${BATCH}/${LIST}/outgoing.work`; do

    echo "${PROGNAME}: [$$] begin ${SITE}"

     cat ${SITE} | $RFC2FTN -n -v

    echo "${PROGNAME}: [$$] end ${SITE}"
 done
 rm -f ${BATCH}/${LIST}/outgoing.work
 if [ ! -f ${BATCH}/${LIST}/outgoing ] ; then
  touch ${BATCH}/${LIST}/outgoing
 fi
fi

##  Remove the lock file.
rm -f ${LOCK}

echo "${PROGNAME}: [$$] end `date`"
